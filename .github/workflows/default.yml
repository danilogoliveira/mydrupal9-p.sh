name: Drupal deploy workflow

on:
  workflow_dispatch:
  push:
    branches:
      - dev
      - main
      - 'feature/*'
      - 'hotfix/*'
      - 'release/v[0-9].[0-9]+.[0-9]+'
      - 'v[0-9].[0-9]+.[0-9]+'
    tags:
      - 'v[0-9].[0-9]+.[0-9]+'
  pull_request:
    branches:
      - dev
      - main

#defaults:
#  run:
#    shell: bash

jobs:
  full:
    name: Full (Build, Validate, Test', Deploy)

    runs-on: ubuntu-18.04
    #strategy:
    #  matrix:
    #    site: [ "site1", "site2", "site3" ]
    container:
      image: geerlingguy/drupal-vm:latest

    services:
      mariadb:
        image: quay.io/juampynr/drupal8-github-actions:latest
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3


    steps:
    #  - name: Install SSH Key
    #    uses: shimataro/ssh-key-action@v2
    #    with:
    #      key: ${{ secrets.GA_SSH_PRIVATE_KEY }}
    #      known_hosts: 'placeholder'

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Determine Composer cache directory
        shell: bash
        run: "echo \"COMPOSER_CACHE_DIR=$(composer config cache-dir)\" >> $GITHUB_ENV"

      - name: Cache dependencies installed with Composer
        uses: actions/cache@v2
        with:
          path: |
            "${{ env.COMPOSER_CACHE_DIR }}"
            vendor
            docroot/core
            docroot/libraries
            docroot/modules/contrib
          key: os-${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}-site-${{ matrix.site }}

      - name: Install Composer Dependencies
        run: |
          composer self-update --2
          composer --no-interaction install --no-progress --prefer-dist --no-suggest --optimize-autoloader -vvv

      ## Install Psh CLI.
      #- name: Install Psh CLI
      #  run: curl -sS https://platform.sh/cli/installer | php

      # Non-database Psh commands.
      #- name: Spin up environment
      #  run: ~/.platformsh/bin/platform environment:activate -p XXX -e ${GITHUB_REF#refs/heads/} --yes
#
      ## If you need to connect to database.
      #- name: Load certificate
      #  run: ~/.platformsh/bin/platform ssh-cert:load -y -vvv
     #
      #- name: Add Psh to trusted keys
      #  # Replace 'us-2' with your region.
      #  run: |
      #    ssh-keyscan ssh.us-2.platform.sh >> ~/.ssh/known_hosts
      #    ssh-keyscan git.us-2.platform.sh >> ~/.ssh/known_hosts

      #- name: Tunnel the db connection
      #   # Make sure the tunnel runs in the background (&).
      #  run: ~/.platformsh/bin/platform tunnel:single -p XXX -e ${GITHUB_REF#refs/heads/} --relationship=db --port=30123 --yes &
#
      ## Run your actions, like tests
      #- name: Run tests
      #  run: php vendor/bin/codecept run
#
      ## End connect to database.
      #- name: Close tunnel
      #  run: ~/.platformsh/bin/platform tunnel:close

      
      - name: Composer validate and install
        run: |
          composer validate
          composer self-update --2
          composer install

      - name: Node install
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      #- name: Install frontend dependencies
      #  run: cd web/themes/imalabya && yarn install
      
      
      # For deployment steps below to work, the repository must have
      # deployment/ssh private key added as a secret with name: SSH_DEPLOYMENT_KEY


      #- name: Create Release
      #  id: create_release
      #  uses: actions/create-release@v1
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #  with:
      #    tag_name: ${{ github.ref }}
      #    release_name: Release ${{ github.ref }}
      #    body: |
      #      Changes in this Release
      #      - First Change
      #      - Second Change
      #    draft: false
      #    prerelease: false


      - name: Sleep for 30 seconds to complete P.sh actions
        run: sleep 30s
        shell: bash
      #- name: Sleep for 30 seconds
      #  uses: jakejarvis/wait-action@master
      #  with:
      #    time: '30s'